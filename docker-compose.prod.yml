services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go_app
    environment:
      DB_DSN: "${DB_DSN_PROD}"
    depends_on:
      - mysql

  mysql:
    image: mysql:8.4
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD_PROD}"
      MYSQL_DATABASE: snippetbox_db
      MYSQL_USER: snippetbox_user
      MYSQL_PASSWORD: "${MYSQL_PASSWORD_PROD}"
    volumes:
      - ./sql/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - mysql_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_ui
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD_PROD}"
    ports:
      - "8080:80"
    depends_on:
      - mysql

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/letsencrypt:rw
    depends_on:
      - web
    restart: always

  # Serviço Certbot (Para Let's Encrypt)
  certbot:
    image: certbot/certbot
    container_name: certbot_manager
    volumes:
      - ./certbot/www:/var/www/certbot:rw
      - ./certbot/conf:/etc/letsencrypt:rw
    command: certonly --webroot -w /var/www/certbot --email seu_email@exemplo.com --agree-tos --no-eff-email -d seu_dominio.com -d www.seu_dominio.com # <--- Mude para seu email e domínio
    depends_on:
      - nginx

volumes:
  mysql_data:
  certbot_www:
  certbot_conf:
