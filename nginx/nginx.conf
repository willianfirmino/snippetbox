# nginx/nginx.conf
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    # O servidor HTTP na porta 80.
    # Usado pelo Certbot para verificação do domínio e para redirecionar HTTP para HTTPS.
    server {
        listen 80;
        server_name seu_dominio.com www.seu_dominio.com; # <--- Mude para seu domínio real!

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri; # Redireciona HTTP para HTTPS
        }
    }

    # O servidor HTTPS na porta 443
    server {
        listen 443 ssl;
        server_name seu_dominio.com www.seu_dominio.com; # <--- Mude para seu domínio real!

        ssl_certificate /etc/letsencrypt/live/seu_dominio.com/fullchain.pem; # <--- Mude para seu domínio real!
        ssl_certificate_key /etc/letsencrypt/live/seu_dominio.com/privkey.pem; # <--- Mude para seu domínio real!

        # Configurações de segurança SSL/TLS (boas práticas)
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
        ssl_prefer_server_ciphers on;

        location / {
            # Proxy para o seu aplicativo Go (o nome do serviço Docker Compose)
            proxy_pass http://web:4000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}